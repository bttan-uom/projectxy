<div class="head-title">
	<div class="left">
		<ul class="breadcrumb">
			<li>
				<a class="active generic-button" href="#">Messages</a>
			</li>
			<li><i class='bx material-icons'>chevron_right</i></li>
		</ul>
		<br>
		<h1>Messages</h1>
	</div>
</div>

<ul class="box-info">
	<li>
		<i class='bx material-icons'>today</i>
		<span class="text">
			<h3>{{getCurrentDate}}</h3>
			<p>Today's Date</p>
		</span>
	</li>
	<li>
		<i class='bx material-icons'>medication</i>
		<span class="text">
			{{#with clinician}}
				<h3>Dr. {{this.first_name}} {{this.last_name}}</h3>
			{{/with}}
			<p>Your clinician</p>
		</span>
	</li>
</ul>

<div class="table-data">
	<div class="order">
		<div class="head">
			{{#with length}}
			<h3>There are {{data.length}} messages</h3>
			{{/with}}
			<input style="width:40%" type="text" class="input-button-select" id="allMessagesInput" onkeyup="allPatientsSearch()" placeholder="Search..." title="Type in a name">

			<a style="color:var(--blue);" href="#"><i class='bx material-icons'>filter_list</i></a>
		</div>
		<table class="scrollTable" id="allPatientsTable">
			<thead>
				<tr>
					<th scope="col">Message</th>
					<th scope="col">Date Added</th>
					<th scope="col">View</th>
				</tr>
			</thead>
			<tbody>
				{{!-- loops over the data set --}}
				{{#each data}}
				<tr>
					<td data-label="Message"> 
						<p>{{this.content}}</p>
					</td>
					<td data-label="Date Added"><p>{{formatDate this.time}}</p></td>
					<td data-label="View"><a href="/userHistory/{{this._id}}"><i style="color:var(--blue);" class='bx material-icons'>arrow_forward_ios</i></a></td>
				</tr>
				{{/each}}
			</tbody>
		</table>
	</div>
</div>

<script>
	const allPatientsSearch = () => {
		const trs = document.querySelectorAll('#allMessagesTable tr:not(.header)')
		const filter = document.querySelector('#allMessagesInput').value
		const regex = new RegExp(filter, 'i')
		const isFoundInTds = td => regex.test(td.innerHTML)
		const isFound = childrenArr => childrenArr.some(isFoundInTds)
		const setTrStyleDisplay = ({ style, children }) => {
			style.display = isFound([
				...children // <-- All columns
			]) ? '' : 'none' 
		}
		
		trs.forEach(setTrStyleDisplay)
	}
</script>
